ALTER PROCEDURE [dbo].[spba_UpdateRosterRelationships]
@TARGET_ID varchar(10),
@ID varchar(10),
@Relationships BA_Relationships READONLY,
@LoginID NVARCHAR(255) = NULL
AS
DECLARE @R varchar (255)
CREATE TABLE #MinRelReq
(
	RELATION_TYPE varchar(10),
)

IF ((SELECT COUNT(*) FROM Relationship WHERE ID=@ID AND RELATION_TYPE='_ORG-ADMIN') = 1 AND (SELECT COUNT(*) FROM Relationship WHERE ID=@ID AND RELATION_TYPE='_ORG-ADMIN' AND TARGET_ID=@TARGET_ID) = 1 AND (SELECT COUNT(*) FROM @Relationships WHERE RELATION_TYPE='_ORG-ADMIN') = 0)
BEGIN
	SELECT 'Save unsucessful.' + FULL_NAME + ' is the only Company Administrator for ' + COMPANY + '. Each company must have at least one Company Administrator.'
	FROM Name 
	WHERE ID=@TARGET_ID
	INSERT INTO #MinRelReq (RELATION_TYPE) VALUES ('_ORG-ADMIN')
	RETURN
	--PRINT @R
END	--
ELSE IF ((SELECT COUNT(*) FROM Relationship WHERE ID=@ID AND RELATION_TYPE='INVOICE') = 1 AND (SELECT COUNT(*) FROM Relationship WHERE ID=@ID AND RELATION_TYPE='INVOICE' AND TARGET_ID=@TARGET_ID) = 1 AND (SELECT COUNT(*) FROM @Relationships WHERE RELATION_TYPE='INVOICE') = 0)
BEGIN
	SELECT 'Save unsucessful.' + FULL_NAME + ' is the only Invoice Contact for ' + COMPANY + '. Each company must have at least one Invoice Contact.'
	FROM Name 
	WHERE ID=@TARGET_ID
	INSERT INTO #MinRelReq (RELATION_TYPE) VALUES ('INVOICE')
	RETURN
END
ELSE IF ((SELECT COUNT(*) FROM Relationship WHERE ID=@ID AND RELATION_TYPE='OWNER') = 1 AND (SELECT COUNT(*) FROM Relationship WHERE ID=@ID AND RELATION_TYPE='OWNER' AND TARGET_ID=@TARGET_ID) = 1 AND (SELECT COUNT(*) FROM @Relationships WHERE RELATION_TYPE='OWNER') = 0)
BEGIN
	SELECT 'Save unsucessful.' + FULL_NAME + ' is the only Owner for ' + COMPANY + '. Each company must have at least one Owner.'
	FROM Name 
	WHERE ID=@TARGET_ID
	INSERT INTO #MinRelReq (RELATION_TYPE) VALUES ('OWNER')
	RETURN
END

--WE ONLY CARE ABOUT CHANGE LOG FOR COMPANY ADMIN
INSERT INTO Name_Log (DATE_TIME, LOG_TYPE, SUB_TYPE, USER_ID, ID, LOG_TEXT)
SELECT GETDATE(), 'CO_ADMIN', 'CO_ADMIN', ISNULL(@LoginID, 'MANAGER'), @TARGET_ID, '(Co_Admin) Relationship.RELATION_TYPE: Deleted ' + RELATION_TYPE + ' from ' + ID
FROM Relationship
WHERE TARGET_ID=@TARGET_ID AND ID=@ID AND RELATION_TYPE NOT IN (SELECT RELATION_TYPE FROM @Relationships) AND RELATION_TYPE NOT IN (SELECT RELATION_TYPE FROM #MinRelReq) AND RELATION_TYPE='_ORG-ADMIN'

DELETE Relationship 
WHERE TARGET_ID=@TARGET_ID AND @ID=@ID AND RELATION_TYPE NOT IN (SELECT RELATION_TYPE FROM @Relationships) AND RELATION_TYPE NOT IN (SELECT RELATION_TYPE FROM #MinRelReq)

DECLARE @RT varchar(10)
DECLARE @SEQN int 

DECLARE RCursor CURSOR FOR 
	SELECT RELATION_TYPE FROM @Relationships
	WHERE RELATION_TYPE NOT IN (SELECT RELATION_TYPE FROM Relationship WHERE TARGET_ID=@TARGET_ID AND @ID=@ID)

OPEN RCursor
FETCH NEXT FROM RCursor INTO @RT
PRINT 'HERE'
WHILE @@FETCH_STATUS=0
BEGIN
	EXEC sp_asi_getcounter 'Relationship',1,0 
	SELECT @SEQN=LAST_VALUE FROM Counter
	WHERE COUNTER_NAME='Relationship'

	IF @RT='_ORG-ADMIN'
		INSERT INTO Name_Log (DATE_TIME, LOG_TYPE, SUB_TYPE, USER_ID, ID, LOG_TEXT)
		SELECT GETDATE(), 'CO_ADMIN', 'CO_ADMIN', ISNULL(@LoginID, 'MANAGER'), @TARGET_ID, '(Co_Admin) Relationship.RELATION_TYPE: Added ' + @RT + ' to ' + @ID

	INSERT INTO Relationship (ID, RELATION_TYPE, TARGET_ID, TARGET_NAME, TARGET_RELATION_TYPE, TITLE, FUNCTIONAL_TITLE, STATUS, EFFECTIVE_DATE, THRU_DATE, NOTE, LAST_STRING, DATE_ADDED, LAST_UPDATED, UPDATED_BY, SEQN, GROUP_CODE)
	SELECT @ID, @RT, @TARGET_ID, '',@RT,'','','',NULL,NULL,NULL,'',GETDATE(),NULL,'MANAGER',@SEQN,''

	FETCH NEXT FROM RCursor INTO @RT
END

CLOSE RCursor
DEALLOCATE RCursor

DROP TABLE #MinRelReq

SELECT 'Save Successful'

GRANT EXECUTE ON spba_UpdateRosterRelationships TO iMIS_Prod_RO
GRANT EXECUTE ON TYPE:: BA_Relationships TO iMIS_Prod_RO
GRANT VIEW DEFINITION ON TYPE:: BA_Relationships TO iMIS_Prod_RO
